name: Lint and test

on:
  workflow_dispatch:
  # workflow_run:
  #   workflows:
  #     - Build Docker Containers
  #   types:
  #     - completed
  # push:
  # pull_request:
  #   types: [review_requested, ready_for_review]

jobs:
  parse_env_vars:
    runs-on: ubuntu-latest
    outputs:
      BASE_HASH_FILES: ${{ steps.file_manager.outputs.BASE_HASH_FILES }}
      BASE_FILE_HASH: ${{ steps.file_manager.outputs.BASE_FILE_HASH }}
      COLUMNAR_HASH_FILES: ${{ steps.file_manager.outputs.COLUMNAR_HASH_FILES }}
      COLUMNAR_FILE_HASH: ${{ steps.file_manager.outputs.COLUMNAR_FILE_HASH }}
      ML_TF_HASH_FILES: ${{ steps.file_manager.outputs.ML_TF_HASH_FILES }}
      ML_TF_FILE_HASH: ${{ steps.file_manager.outputs.ML_TF_FILE_HASH }}
      DOCS_HASH_FILES: ${{ steps.file_manager.outputs.DOCS_HASH_FILES }}
      DOCS_FILE_HASH: ${{ steps.file_manager.outputs.DOCS_FILE_HASH }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - uses: ./.github/actions/file_manager
      id: file_manager
      name: "initialize file manager"
  test_matrix:
    uses: ./.github/workflows/test_sequence.yaml
    needs: [parse_env_vars]
    strategy:
      fail-fast: false
      matrix:
        include:
          - CONTAINER: "software-base:python3.10-${{ needs.parse_env_vars.outputs.BASE_FILE_HASH }}"
            NAME: "Lint üîç"
            EXECUTABLE: "./tests/run_linting"
            UPLOAD_FILES: false
          - CONTAINER: "venv_columnar:python3.10-${{ needs.parse_env_vars.outputs.COLUMNAR_FILE_HASH }}"
            NAME: Test üé¢
            EXECUTABLE: "./tests/run_tests"
            UPLOAD_FILES: false
          - CONTAINER: "venv_columnar:python3.10-${{ needs.parse_env_vars.outputs.COLUMNAR_FILE_HASH }}"
            NAME: Run coverage üé¢
            EXECUTABLE: "./tests/run_coverage"
            UPLOAD_FILES: true
    with:
      CONTAINER: "ghcr.io/${{ github.repository }}/${{ matrix.CONTAINER }}"
      EXECUTABLE: ${{ matrix.EXECUTABLE }}
      UPLOAD_FILES: ${{ matrix.UPLOAD_FILES }}
      NAME: ${{ matrix.NAME }}

  pypi:
    runs-on: ubuntu-latest
    # only upload to pypi if tests ran successfully
    needs: test_matrix
    environment: Pypi tests
    steps:
      - name: Checkout ‚¨áÔ∏è
        uses: actions/checkout@master
        with:
          persist-credentials: false
          submodules: recursive

      - name: Setup python üêç
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies ‚òïÔ∏è
        run: |
          pip install -U pip
          pip install twine

      - name: Check bundling üì¶
        run: python setup.py sdist

      - name: Check setup üö¶
        run: twine check "dist/$( python setup.py --fullname ).tar.gz"
