name: Lint and test

on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - Build Docker Containers
    types:
      - completed
  push:
  pull_request:
    types: [review_requested, ready_for_review]

jobs:
  test_matrix:
    uses: ./.github/workflows/test_sequence.yaml
    strategy:
      matrix:
        include:
          - CONTAINER: ""
            NAME: "Lint üîç"
            EXECUTABLE: "./tests/run_linting"
          - CONTAINER: "ghcr.io/${{ github.repository }}/venv_columnar:python3.10-latest"
            NAME: Test üé¢
            EXECUTABLE: "./tests/run_tests"
          - CONTAINER: "ghcr.io/${{ github.repository }}/venv_columnar:python3.10-latest"
            NAME: Run coverage üé¢
            EXECUTABLE: "./tests/run_coverage"
            UPLOAD_FILES: true
    with:
      CONTAINER: ${{ matrix.CONTAINER }}
      EXECUTABLE: ${{ matrix.EXECUTABLE }}
      UPLOAD_FILES: ${{ matrix.UPLOAD_FILES }}
      NAME: ${{ matrix.NAME }}

  pypi:
    runs-on: ubuntu-latest
    # only upload to pypi if tests ran successfully
    needs: test_matrix
    environment: Pypi tests
    steps:
      - name: Checkout ‚¨áÔ∏è
        uses: actions/checkout@master
        with:
          persist-credentials: false
          submodules: recursive

      - name: Setup python üêç
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies ‚òïÔ∏è
        run: |
          pip install -U pip
          pip install twine

      - name: Check bundling üì¶
        run: python setup.py sdist

      - name: Check setup üö¶
        run: twine check "dist/$( python setup.py --fullname ).tar.gz"
