name: Build Docker Container
on:
  push:

env:
  base_hash_files: |
    **/requirements*.txt
    **/sandboxes/cf_*.sh
    **/setup.sh
    **/_setup*.sh
    pyproject.toml


jobs:    
  build_base_software:
    uses: ./.github/workflows/build_docker_container.yaml
    permissions:
      contents: read
      packages: write
    name: Build base software
    with:
      IMAGE_NAME: "software-base"
      PUSH_IMAGE: true
      PYVERSION: "3.10"
      BUILD_ARGS: |
        exe_file=setup.sh
      HASHFILES: |
        **/requirements*.txt
        **/sandboxes/cf_*.sh
        **/setup.sh
        **/_setup*.sh
        pyproject.toml
    secrets: inherit

  
  build_venvs:
    needs: build_base_software
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - venv: "columnar"
            name: "columnar"
            hashFiles: |
              **/sandboxes/venv_columnar*.sh
              **/sandboxes/columnar.txt
              **/sandboxes/_setup_venv.sh
          - venv: ml_tf
            name: "ml_tf"
            hashFiles: |
              **/sandboxes/_setup_venv.sh
              **/sandboxes/venv_ml_tf*.sh
              **/sandboxes/ml_tf.txt
    uses: ./.github/workflows/build_docker_container.yaml
    with:
      IMAGE_NAME: venv_${{ matrix.name }}
      PUSH_IMAGE: true
      PYVERSION: "3.10"
      BUILD_ARGS: |
        exe_file=sandboxes/venv_${{ matrix.venv }}.sh
        base=ghcr.io/${{ github.repository }}/software-base:python3.10-latest
      HASHFILES: |
        **/requirements*.txt
        **/sandboxes/cf_*.sh
        **/setup.sh
        **/_setup*.sh
        pyproject.toml
        ${{ matrix.hashFiles }}
    secrets: inherit
